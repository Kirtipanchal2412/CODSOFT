import tkinter as tk
from tkinter import messagebox

class ToDoApp:
    def _init_(self, root):
        self.root = root
        self.root.title('To-Do List')
        self.root.geometry('800x600')
        self.root.configure(bg='grey')  # Set the background color to grey

        self.label = tk.Label(self.root, text='To-Do List', font='ariel 25 bold',
                              width=20, bd=5, bg='blue', fg='white')  # Blue and white label
        self.label.pack(side='top', fill=tk.BOTH)

        self.label2 = tk.Label(self.root, text='Add Task', font='ariel 18 bold',
                              width=10, bd=5, bg='blue', fg='white')  # Blue and white label
        self.label2.place(x=40, y=54)

        self.label3 = tk.Label(self.root, text='Tasks', font='ariel 18 bold',
                              width=10, bd=5, bg='blue', fg='white')  # Blue and white label
        self.label3.place(x=320, y=54)

        self.task_entry = tk.Entry(self.root, bd=5, font='ariel 10 bold')
        self.task_entry.place(x=20, y=120, width=300, height=30)

        self.add_button = tk.Button(self.root, text="Add Task", command=self.add_task, bg='blue', fg='white')  # Blue and white button
        self.add_button.place(x=20, y=160, width=300, height=30)

        self.remove_button = tk.Button(self.root, text="Remove Task", command=self.remove_task, bg='blue', fg='white')  # Blue and white button
        self.remove_button.place(x=20, y=200, width=300, height=30)

        self.clear_button = tk.Button(self.root, text="Clear All Tasks", command=self.clear_tasks, bg='blue', fg='white')  # Blue and white button
        self.clear_button.place(x=20, y=240, width=300, height=30)

        self.tasks_listbox = tk.Listbox(self.root, bd=5, font='ariel 20 italic bold', selectbackground='blue', selectforeground='white')  # Blue and white selection
        self.tasks_listbox.place(x=380, y=100, width=400, height=400)

    def add_task(self):
        task = self.task_entry.get()
        if task:
            self.tasks_listbox.insert(tk.END, task)
            self.task_entry.delete(0, tk.END)
        else:
            messagebox.showwarning("Warning", "Please enter a task.")

    def remove_task(self):
        selected_task_index = self.tasks_listbox.curselection()
        if selected_task_index:
            self.tasks_listbox.delete(selected_task_index)
        else:
            messagebox.showwarning("Warning", "Please select a task to remove.")

    def clear_tasks(self):
        self.tasks_listbox.delete(0, tk.END)

app = tk.Tk()
app.title("To-Do Application")

todo_app = ToDoApp(app)

app.mainloop()
